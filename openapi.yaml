openapi: 3.0.3
info:
  title: Hotel API
  description: API for hotel booking system
  version: 1.0.0
servers:
  - url: http://localhost:8001
    description: Local development server

components:
  schemas:
    HotelBasic:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        location:
          type: string
        rating:
          type: number
          format: float
        amenities:
          type: array
          items:
            type: string
        policies:
          type: array
          items:
            type: string
        roomTypes:
          type: array
          items:
            type: string
        promotions:
          type: array
          items:
            type: string

    Hotels:
      type: object
      properties:
        hotels:
          type: array
          items:
            $ref: '#/components/schemas/HotelBasic'

    Room:
      type: object
      properties:
        id:
          type: integer
        room_number:
          type: string
        room_type:
          type: string
        price_per_night:
          type: number
          format: float
        occupancy:
          type: integer
        amenities:
          type: array
          items:
            type: string
        cancellationPolicy:
          type: string
        is_available:
          type: boolean

    Hotel:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        location:
          type: string
        rating:
          type: number
          format: float
        amenities:
          type: array
          items:
            type: string
        policies:
          type: array
          items:
            type: string
        roomTypes:
          type: array
          items:
            type: string
        promotions:
          type: array
          items:
            type: string
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/Room'

    BookingCreate:
      type: object
      properties:
        hotel_id:
          type: integer
        room_id:
          type: integer
        check_in:
          type: string
          format: date
        check_out:
          type: string
          format: date
      required:
        - hotel_id
        - room_id
        - check_in
        - check_out

    Booking:
      type: object
      properties:
        id:
          type: integer
        hotel_id:
          type: integer
        hotel_name:
          type: string
        user_id:
          type: string
          format: uuid
        room_id:
          type: integer
        room_type:
          type: string
        check_in:
          type: string
          format: date
        check_out:
          type: string
          format: date
        total_price:
          type: number
          format: float

    BookingPreviewRequest:
      type: object
      properties:
        room_id:
          type: integer
        check_in:
          type: string
          format: date
        check_out:
          type: string
          format: date
      required:
        - room_id
        - check_in
        - check_out

    BookingPreview:
      type: object
      properties:
        room_id:
          type: integer
        room_number:
          type: string
        room_type:
          type: string
        room_type_description:
          type: string
        price_per_night:
          type: number
          format: float
        total_price:
          type: number
          format: float
        hotel_id:
          type: integer
        hotel_name:
          type: string
        hotel_description:
          type: string
        hotel_rating:
          type: number
          format: float
        is_available:
          type: boolean
        check_in:
          type: string
          format: date
        check_out:
          type: string
          format: date

    UserLoyalty:
      type: object
      properties:
        user_id:
          type: integer
        loyalty_points:
          type: integer

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

paths:
  /api/hotels:
    get:
      summary: List all hotels
      operationId: listHotels
      security:
        - BearerAuth: ['read_hotels']
      responses:
        '200':
          description: List of hotels
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotels'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/hotels/{hotel_id}:
    get:
      summary: Get hotel details
      operationId: getHotel
      security:
        - BearerAuth: ['read_rooms']
      parameters:
        - name: hotel_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Hotel details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
        '404':
          description: Hotel not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/rooms/{room_id}:
    get:
      summary: Get room details
      operationId: getRoomDetails
      security:
        - BearerAuth: ['read_rooms']
      parameters:
        - name: room_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Room details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '404':
          description: Room not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/bookings:
    post:
      summary: Book a room
      operationId: bookRoom
      security:
        - BearerAuth: ['create_bookings']
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingCreate'
      responses:
        '200':
          description: Booking created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '400':
          description: Invalid request or room not available
        '404':
          description: Hotel or room not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/bookings/{booking_id}:
    get:
      summary: Get booking details
      operationId: getBookingDetails
      security:
        - BearerAuth: ['read_bookings']
      parameters:
        - name: booking_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Booking details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '404':
          description: Booking not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/bookings/preview:
    post:
      summary: Get booking preview
      operationId: getBookingPreview
      security:
        - BearerAuth: ['read_rooms']
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingPreviewRequest'
      responses:
        '200':
          description: Booking preview
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingPreview'
        '404':
          description: Room not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/users/{user_id}/bookings:
    get:
      summary: Get user bookings
      operationId: getUserBookings
      security:
        - BearerAuth: ['read_bookings']
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of user bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /api/users/{user_id}/loyalty:
    get:
      summary: Get user loyalty points
      operationId: getUserLoyalty
      security:
        - BearerAuth: ['read_loyalty']
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User loyalty information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoyalty'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
